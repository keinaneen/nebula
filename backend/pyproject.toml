[tool.poetry]
name = "nebula"
version = "6.0.4"
description = "Open source broadcast automation system"
authors = ["Nebula Broadcast <info@nebulabroadcast.com>"]

[tool.poetry.dependencies]
python = "^3.10"
aiofiles = "^23.2.1"
asyncpg = "^0.29.0"
fastapi = "^0.110.0"
mistune = "^3.0.1"
nxtools = "^1.6"
pydantic = "^2.6.3"
python-dotenv = "^1.0.1"
redis = "^5.0.2"
rich = "^13.7.1"
uvicorn = {extras = ["standard"], version = "0.27.1"}
shortuuid = "^1.0.12"
email-validator = "^2.1.1"
geoip2 = "^4.8.0"
user-agents = "^2.2.0"
httpx = "^0.27.0"
requests = "^2.31.0"
gunicorn = "^21.2.0"
granian = "^1.1.1"

[tool.poetry.dev-dependencies]
pytest = "^8.0"
mypy = "^1.8"
ruff = "^0.3.1"
pytest-asyncio = "^0.20.3"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "ISC", # flake8-implicit-str-concat
    "C4",  # flake8-comprehensions
    # "N",    # pep8-naming
    # "SIM",  # flake8-simplify
]

ignore = [
    "ISC001",
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex. C'mon - this is a complex project
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
